//
//  ShowRegistrationLivenessInstructionViewController.swift
//  QTSIdentityApp
//
//  Created by admin on 20/12/2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import IprLiveness
import iProov
import SVProgressHUD

class LivenessViewController: UIViewController {
    @IBOutlet weak var btnNotShowAgain: UIButton!
    var readCardId: String?
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            if scene == "page_embed" {
                let vc = segue.destination as? PageViewController
                let page1 = LivenessInstructionItemController.storyboardViewController
                page1.instruction = "B·ªè k√≠nh, m≈©, kh·∫©u trang tr∆∞·ªõc khi th·ª±c hi·ªán so kh·ªõp"
                page1.should = .icLiveness
                page1.shouldNot = .icLiveness1
                let page2 = LivenessInstructionItemController.storyboardViewController
                page2.instruction = "L·ª±a ch·ªçn n∆°i c√≥ √°nh s√°ng ƒë·∫ßy ƒë·ªß, kh√¥ng s√°ng qu√° ho·∫∑c t·ªëi qu√°"
                page2.should = .icLiveness
                page2.shouldNot = .icLiveness2
                let page3 = LivenessInstructionItemController.storyboardViewController
                page3.instruction = "ƒê·∫£m b·∫£o ch·ªâ c√≥ duy nh·∫•t khu√¥n m·∫∑t c·ªßa b·∫°n trong khung h√¨nh"
                page3.should = .icLiveness
                page3.shouldNot = .icLiveness3
                vc?.pages = [
                    page1, page2, page3
                ]
                return
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.btnNotShowAgain.isSelected = true
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        navigationController?.setNavigationBarHidden(false, animated: true)
    }
    
    @IBAction func nextBtnTapped(_ sender: Any) {
        
////                let readCardId = ""
//        IprLivenessManager.liveness(config: IprLivenessConfig(readCardRequestId: readCardId))
        Task {
            do {
                let readCardId = CardManager.temporaryCard?.readIdCardRequestId ?? ""
                SVProgressHUD.show()
                let res = try await IprLivenessManager.initTransaction(options: InitTransactionOptions(clientTransactionId: readCardId))
                guard let token = res.data?.verifyToken, let transactionId = res.data?.transactionId else {
                    await SVProgressHUD.dismiss()
                    throw NSError(domain: res.signature, code: res.status)
                }
                IProov.launch(streamingURL: URL(string: "wss://sg.rp.secure.iproov.me/ws")!, token: token) { status in
                    switch status {
                    case .success:
                        Task {
                            do {
                                let res = try await IprLivenessManager.verifyFace(transactionId: transactionId)
                                if res.success && res.data.success {
                                    let vc = EkycResultViewController.storyboardViewController
                                    vc.cardInfo = CardManager.temporaryCard
                                    self.show(vc, sender: nil)
                                } else {
                                    Constants.Alert.showErrorAlert(self, message: res.message)
                                }
                                await SVProgressHUD.dismiss()
                            } catch {
                                await SVProgressHUD.dismiss()
                                Constants.Alert.showErrorAlert(self, message: error.localizedDescription)
                            }
                        }
                    case .failure(let fail):
                        SVProgressHUD.dismiss()
                        Constants.Alert.showErrorAlert(self, message: fail.localizedDescription)
                    case .error(let error):
                        SVProgressHUD.dismiss()
                        Constants.Alert.showErrorAlert(self, message: error.localizedDescription)
                    case .processing:
                        SVProgressHUD.show()
                    default:
                        SVProgressHUD.dismiss()
                    }
                    print("üîπ Got status: \(status)")
                }
            } catch {
                print(error)
            }
        }
    }
    
    @IBAction func onPressNotShowAgain(_ sender: UIButton) {
        sender.isSelected.toggle()
    }
}

extension LivenessViewController : StoryboardInitialization {
    typealias Element = LivenessViewController
    static var storyBoard: AppStoryboard = .Main
}
